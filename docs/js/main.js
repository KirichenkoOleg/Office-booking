$(function(){$("#inputLocation").autocomplete({source:function(o,a){$.ajax({url:"../data/location.json",dataType:"json",success:function(e){var n=[];e.forEach(function(e){var a=o.term,t=e.label;new RegExp("^"+a+"\\w*","i").test(t)&&n.push(e.label)}),a(n)}})}}),$("#inputDate").datepicker({dateFormat:"dd M yy",minDate:new Date,onSelect:function(e,a){}}),$("#slider").slider({animate:"slow",range:"min",value:6})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyJdLCJuYW1lcyI6WyIkIiwiYXV0b2NvbXBsZXRlIiwic291cmNlIiwicmVxdWVzdCIsInJlc3BvbnNlIiwiYWpheCIsInVybCIsImRhdGFUeXBlIiwic3VjY2VzcyIsImRhdGEiLCJsb2NMaXN0IiwiZm9yRWFjaCIsIml0ZW0iLCJzdHIiLCJ0ZXJtIiwic3RyRnVsbCIsImxhYmVsIiwiUmVnRXhwIiwidGVzdCIsInB1c2giLCJkYXRlcGlja2VyIiwiZGF0ZUZvcm1hdCIsIm1pbkRhdGUiLCJEYXRlIiwib25TZWxlY3QiLCJkYXRlVGV4dCIsImluc3QiLCJzbGlkZXIiLCJhbmltYXRlIiwicmFuZ2UiLCJ2YWx1ZSJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUUsV0FHRUEsRUFBRSxrQkFBa0JDLGFBQWEsQ0FDN0JDLE9BQVEsU0FBU0MsRUFBU0MsR0FNdEJKLEVBQUVLLEtBQUssQ0FDSEMsSUFBSyx3QkFDTEMsU0FBVSxPQUVWQyxRQUFTLFNBQVNDLEdBQ2QsSUFBSUMsRUFBVSxHQUVkRCxFQUFLRSxRQUFRLFNBQVNDLEdBRWxCLElBQUlDLEVBQU1WLEVBQVFXLEtBQ2RDLEVBQVVILEVBQUtJLE1BRUosSUFBSUMsT0FETCxJQUFNSixFQUFLLE9BQ1UsS0FDUEssS0FBTUgsSUFHOUJMLEVBQVFTLEtBQUtQLEVBQUtJLFNBRzFCWixFQUFVTSxTQU8xQlYsRUFBRSxjQUFjb0IsV0FBVyxDQUN2QkMsV0FBWSxVQUNaQyxRQUFTLElBQUlDLEtBQ2JDLFNBQVUsU0FBU0MsRUFBVUMsT0FNakMxQixFQUFHLFdBQVkyQixPQUFPLENBQ2xCQyxRQUFTLE9BQ1RDLE1BQU8sTUFDUEMsTUFBTyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJChmdW5jdGlvbigpIHtcclxuICAgIC8vINC/0LvQsNCz0LjQvdGLIEd1bHAg0L3QtSDQv9C+0LTQtNC10YDQttC40LLQsNGO0YIg0YHQuNC90YLQsNC60YHQuNGBIEVTNlxyXG5cclxuICAgICQoJyNpbnB1dExvY2F0aW9uJykuYXV0b2NvbXBsZXRlKHtcclxuICAgICAgICBzb3VyY2U6IGZ1bmN0aW9uKHJlcXVlc3QsIHJlc3BvbnNlKXtcclxuICAgICAgICAgICAgLy8gcmVxdWVzdCAtINGC0LXQutGD0YnQtdC1INGB0L7QtNC10YDQttC40LzQvtC1INGC0LXQutGB0YLQvtCy0L7Qs9C+INC/0L7Qu9GPLCDQtNC70Y8g0LrQvtGC0L7RgNC+0LPQviDQvdGD0LbQvdC+INC/0L7QtNC+0LHRgNCw0YLRjCDRjdC70LXQvNC10L3RgtGLINCw0LLRgtC+0LfQsNC/0L7Qu9C90LXQvdC40Y8uXHJcbiAgICAgICAgICAgIC8vIHJlc3BvbnNlIC0g0LHRg9C00LXRgiDQt9Cw0LTQsNC90LAgX9GE0YPQvdC60YbQuNGPXywg0LrQvtGC0L7RgNGD0Y4g0LHRg9C00LXRgiDQvdC10L7QsdGF0L7QtNC40LzQviDQstGL0LfQstCw0YLRjCDQuCDQv9C10YDQtdC00LDRgtGMINC10Lkg0YHQv9C40YHQvtC6INC/0L7QtNGF0L7QtNGP0YnQuNGFINGN0LvQtdC80LXQvdGC0L7QsiDQsNCy0YLQvtC30LDQv9C+0LvQvdC10L3QuNGPLiBcclxuICAgICAgICAgICAgLy8t0J7QvSDQtNC+0LvQttC10L0g0YHQvtC+0YLQstC10YLRgdGC0LLQvtCy0LDRgtGMINGC0L7QvNGDINC20LUg0YTQvtGA0LzQsNGC0YMsINGH0YLQviDQuCDQsiDQv9GA0LXQtNGL0LTRg9GJ0LjRhSDRgdC70YPRh9Cw0Y/RhSAo0LzQsNGB0YHQuNCyINGB0YLRgNC+0Log0LjQu9C4INC80LDRgdGB0LjQsiDQvtCx0YrQtdC60YLQvtCyKS5cclxuICAgICAgICAgICAgLy8t0J3QtdC+0LHRhdC+0LTQuNC80L4g0L7RgtC80LXRgtC40YLRjCwg0YfRgtC+INGN0YLQsCDRhNGD0L3QutGG0LjRjyDQtNC+0LvQttC90LAg0LHRi9GC0Ywg0LLRi9C30LLQsNC90LAg0L/RgNC4INC70Y7QsdGL0YUg0L7QsdGB0YLQvtGP0YLQtdC70YzRgdGC0LLQsNGFLCDQtNCw0LbQtSDQtdGB0LvQuCDQv9GA0Lgg0L/QvtC00LHQvtGA0LUg0Y3Qu9C10LzQtdC90YLQvtCyINCw0LLRgtC+0LfQsNC/0L7Qu9C90LXQvdC40Y8g0L/RgNC+0LjQt9C+0YjQu9CwINC+0YjQuNCx0LrQsC5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6IFwiLi4vZGF0YS9sb2NhdGlvbi5qc29uXCIsXHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29uXCIsXHJcbiAgICAgICAgICAgICAgICAvLyDQvtCx0YDQsNCx0L7RgtC60LAg0YPRgdC/0LXRiNC90L7Qs9C+INCy0YvQv9C+0LvQvdC10L3QuNGPINC30LDQv9GA0L7RgdCwXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbihkYXRhKXtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgbG9jTGlzdCA9IFtdOy8v0LzQsNGB0YHQuNCyINGB0L7QstC/0LDQtNC10L3QuNC5INC60L7RgtC+0YDRi9C5INCx0YPQtNC10Lwg0LLQvtC30LLRgNCw0YnQsNGC0YxcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy/QvNC10YLQvtC0INC/0YDQvtGF0L7QtNC40YIg0L/QviDQvNCw0YHRgdC40LLRgyDQuCDQsdGD0YDQtdGCINGDINC60LDQttC00L7Qs9C+INGB0LLQvtC50YHRgtCy0L4g0L/QvtC0INC60LvRjtGH0L7QvCBsYWJlbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3RyID0gcmVxdWVzdC50ZXJtOy8vINC/0L7Qu9GD0YfQsNC10Lwg0LjQtyDRhNC+0YDQvNGLXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdHJGdWxsID0gaXRlbS5sYWJlbDsvLyDQt9C90LDRh9C10L3QuNC1INGB0LLQvtC50YHRgtCy0LAgbGFiZWxcclxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHBhdHRlcm4gPSAnXicgKyBzdHIgKydcXFxcdyonO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgbXlSZWdFeHAgPSBuZXcgUmVnRXhwKHBhdHRlcm4sICdpJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciByZWdFeHBSZXN1bHQgPSBteVJlZ0V4cC50ZXN0KCBzdHJGdWxsICk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiggcmVnRXhwUmVzdWx0ICkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jTGlzdC5wdXNoKGl0ZW0ubGFiZWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlKCBsb2NMaXN0ICk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8vIG1pbkxlbmd0aDogMixcclxuICAgIH0pO1xyXG5cclxuICAgICQoJyNpbnB1dERhdGUnKS5kYXRlcGlja2VyKHtcclxuICAgICAgICBkYXRlRm9ybWF0OiAnZGQgTSB5eScsXHJcbiAgICAgICAgbWluRGF0ZTogbmV3IERhdGUoKSxcclxuICAgICAgICBvblNlbGVjdDogZnVuY3Rpb24oZGF0ZVRleHQsIGluc3Qpe1xyXG4gICAgICAgICAgICAvL9C/0YDQvtC40YHRhdC+0LTQuNGCINCyINC80L7QvNC10L3RgiDQstGL0LHQvtGA0LAg0LTQsNGC0Ysg0LIg0LrQsNC70LXQvdC00LDRgNC1XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCBg0JLRi9Cx0YDQsNC90L3QsNGPINC00LDRgtCwICR7ZGF0ZVRleHR9YCApOyBcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICAkKCBcIiNzbGlkZXJcIiApLnNsaWRlcih7XHJcbiAgICAgICAgYW5pbWF0ZTogXCJzbG93XCIsXHJcbiAgICAgICAgcmFuZ2U6IFwibWluXCIsXHJcbiAgICAgICAgdmFsdWU6IDZcclxuICAgIH0pO1xyXG5cclxuXHJcblxyXG59KTtcclxuIl19
